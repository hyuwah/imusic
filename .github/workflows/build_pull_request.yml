name: Pull Request
on:
#  push:
#    branches: [ research/devops ]
  pull_request:
    branches: [ master ]
jobs:

  test_job:
    name: Test
    runs-on: ubuntu-latest
    env:
      KEYSTORE_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      KEYSTORE_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_STORE_PASSPHRASE }}
      KEYSTORE_STORE_PASSWORD: ${{ secrets.SIGNING_KEY_STORE_PASSPHRASE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.0.0
        # Decrypt release keystore and release properties file from github secrets
      - name: Decrypt files 
        id: decrypt_files
        run: |
          # Creating encrypted keystore file from secret saved on GitHub
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.jks.asc 
          # Decrypting keystore from passphrase(saved as secret) used earlier for encryption
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_DECRYPT_PASSPHRASE }}" --batch release.jks.asc > config/release_keystore.jks
          # Creating encrypted play service account file from saved secret.
          echo "${{ secrets.PLAY_SERVICE_ACCOUNT}}" > api-7730997362032805480-382486-3308f76b1b64.json.asc
          # Decrypting play service account with passphrase(saved as secret) used earlier for encryption
          gpg -d --passphrase "${{ secrets.PLAY_SERVICE_ACCOUNT_DECRYPT_PASSPHRASE }}" --batch api-7730997362032805480-382486-3308f76b1b64.json.asc > config/api-7730997362032805480-382486-3308f76b1b64.json
          echo "storeFile=config/release_keystore.jks" >> keystore.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties
          
      - name: Setup Java JDK
        uses: actions/setup-java@v3.12.0
        with:
          java-version: 17.0.6+10
          distribution: adopt
          cache: gradle

      - name: Run Debug Tests
        run: ./gradlew testDebugUnitTest --continue

      - name: Upload Test Reports
        uses: actions/upload-artifact@v3.1.3
        with:
          name: test-reports
          path: '**/build/reports/tests/'

  lint_job:
    name: Lint
    runs-on: ubuntu-latest
    env:
      KEYSTORE_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      KEYSTORE_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_STORE_PASSPHRASE }}
      KEYSTORE_STORE_PASSWORD: ${{ secrets.SIGNING_KEY_STORE_PASSPHRASE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.0.0
        # Decrypt release keystore and release properties file from github secrets
      - name: Decrypt files
        id: decrypt_files
        run: |
          # Creating encrypted keystore file from secret saved on GitHub
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.jks.asc 
          # Decrypting keystore from passphrase(saved as secret) used earlier for encryption
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_DECRYPT_PASSPHRASE }}" --batch release.jks.asc > config/release_keystore.jks
          # Creating encrypted play service account file from saved secret.
          echo "${{ secrets.PLAY_SERVICE_ACCOUNT}}" > api-7730997362032805480-382486-3308f76b1b64.json.asc
          # Decrypting play service account with passphrase(saved as secret) used earlier for encryption
          gpg -d --passphrase "${{ secrets.PLAY_SERVICE_ACCOUNT_DECRYPT_PASSPHRASE }}" --batch api-7730997362032805480-382486-3308f76b1b64.json.asc > config/api-7730997362032805480-382486-3308f76b1b64.json
          echo "storeFile=config/release_keystore.jks" >> keystore.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties

      - name: Setup Java JDK
        uses: actions/setup-java@v3.12.0
        with:
          java-version: 17.0.6+10
          distribution: adopt
          cache: gradle

      - name: Run Debug Lint
        run: ./gradlew lintDebug

      - name: Upload Lint Reports
        uses: actions/upload-artifact@v3.1.3
        with:
          name: lint-reports
          path: '**/build/reports/lint-results-*'

  assemble_job:
    name: Assemble Debug
    runs-on: ubuntu-latest
    env:
      KEYSTORE_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      KEYSTORE_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_STORE_PASSPHRASE }}
      KEYSTORE_STORE_PASSWORD: ${{ secrets.SIGNING_KEY_STORE_PASSPHRASE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.0.0
        # Decrypt release keystore and release properties file from github secrets
      - name: Decrypt files
        id: decrypt_files
        run: |
          # Creating encrypted keystore file from secret saved on GitHub
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.jks.asc 
          # Decrypting keystore from passphrase(saved as secret) used earlier for encryption
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_DECRYPT_PASSPHRASE }}" --batch release.jks.asc > config/release_keystore.jks
          # Creating encrypted play service account file from saved secret.
          echo "${{ secrets.PLAY_SERVICE_ACCOUNT}}" > api-7730997362032805480-382486-3308f76b1b64.json.asc
          # Decrypting play service account with passphrase(saved as secret) used earlier for encryption
          gpg -d --passphrase "${{ secrets.PLAY_SERVICE_ACCOUNT_DECRYPT_PASSPHRASE }}" --batch api-7730997362032805480-382486-3308f76b1b64.json.asc > config/api-7730997362032805480-382486-3308f76b1b64.json
          echo "storeFile=config/release_keystore.jks" >> keystore.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties

      - name: Setup Java JDK
        uses: actions/setup-java@v3.12.0
        with:
          java-version: 17.0.6+10
          distribution: adopt
          cache: gradle

      - name: Assemble Debug
        run: ./gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v3.1.3
        with:
          name: apk
          path: app/build/outputs/apk/debug/**.apk

